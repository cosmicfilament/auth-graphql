{"version":3,"sources":["shared/images/sandpiper.png","shared/images/dashboard.png","components/Landing/LandingPage.js","shared/graphql/queries/CurrentUser.js","shared/graphql/mutations/Logout.js","shared/hooks/authHook.js","components/Header/NavHeader.js","shared/components/AuthForm.js","shared/graphql/mutations/Login.js","components/Login/LoginFormPage.js","shared/graphql/mutations/Signup.js","components/Signup/SignupFormPage.js","components/Dashboard/DashboardPage.js","App.js","shared/hocs/RequireAuth.js","index.js"],"names":["module","exports","LandingPage","props","className","style","background","src","bgnd","padding","alt","gql","useAuthHook","useState","authenticated","setAuthState","useQuery","query","loading","data","history","useHistory","goFwdTo","useCallback","page","push","goBack","useEffect","currentUser","NavHeader","useMutation","mutation","logout","handleOnLogoutClick","refetchQueries","then","catch","error","console","log","to","onClick","AuthForm","email","password","formState","setFormState","formHandler","input","value","onSubmit","event","preventDefault","placeholder","type","onChange","target","LoginForm","login","mutationError","variables","color","String","replace","SignupForm","signup","Dashboard","errorLink","onError","graphQLErrors","networkError","map","message","locations","path","cache","InMemoryCache","httpLink","HttpLink","uri","opts","credentials","link","ApolloLink","from","client","ApolloClient","App","exact","component","WrappedComponent","graphql","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55b1fe2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sandpiper.8a3a568b.png\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.6ec7e125.png\";","import React from 'react';\nimport bgnd from '../../shared/images/sandpiper.png';\n\nconst LandingPage = props => {\n\treturn (\n\t\t<section className='card row' style={{ background: 'lightyellow' }}>\n\t\t\t<div className='card-image col s12'>\n\t\t\t\t<img src={bgnd} style={{ padding: '5px' }} alt='bird' />\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default LandingPage;\n","import gql from 'graphql-tag';\n\nexport default gql`\n\t{\n\t\tcurrentUser {\n\t\t\tid\n\t\t\temail\n\t\t}\n\t}\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n\tmutation {\n\t\tlogout {\n\t\t\tid\n\t\t\temail\n\t\t}\n\t}\n`;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\n\nimport query from '../../shared/graphql/queries/CurrentUser';\n\nexport const useAuthHook = () => {\n\tconst [ authenticated, setAuthState ] = useState(false);\n\tconst { loading, data } = useQuery(query);\n\n\tconst history = useHistory();\n\n\tconst goFwdTo = useCallback(\n\t\tpage => {\n\t\t\thistory.push(page);\n\t\t},\n\t\t[ history ]\n\t);\n\n\tconst goBack = useCallback(\n\t\t() => {\n\t\t\thistory.goBack();\n\t\t},\n\t\t[ history ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetAuthState(!loading && data.currentUser !== null);\n\t\t},\n\t\t[ loading, data, setAuthState, authenticated ]\n\t);\n\n\treturn { authenticated, goFwdTo, goBack, loading };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport query from '../../shared/graphql/queries/CurrentUser';\nimport mutation from '../../shared/graphql/mutations/Logout';\nimport { useAuthHook } from '../../shared/hooks/authHook';\n\nconst NavHeader = () => {\n\tconst { authenticated, goFwdTo, loading } = useAuthHook();\n\tconst [ logout ] = useMutation(mutation);\n\n\tconst handleOnLogoutClick = () => {\n\t\tlogout({ refetchQueries: [ { query } ] })\n\t\t\t.then(() => {\n\t\t\t\tgoFwdTo('/');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(`Error Logging Out: ${error}`);\n\t\t\t});\n\t};\n\n\tconst renderButtons = () => {\n\t\tif (loading) {\n\t\t\treturn <div />;\n\t\t}\n\n\t\tif (authenticated) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<li className=''>\n\t\t\t\t\t\t<Link to='/dashboard'>Dashboard</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{/* eslint-disable-next-line */}\n\t\t\t\t\t\t<a onClick={handleOnLogoutClick}>Logout</a>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<li className=''>\n\t\t\t\t\t\t<Link to='/signup'>Signup</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=''>\n\t\t\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<nav>\n\t\t\t<div className='nav-wrapper'>\n\t\t\t\t<Link to='/' className='brand-logo left'>\n\t\t\t\t\tHome\n\t\t\t\t</Link>\n\t\t\t\t<ul className='right'>{renderButtons()}</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default NavHeader;\n","import React, { useState } from 'react';\n\nconst AuthForm = props => {\n\tconst [ formState, setFormState ] = useState({ email: '', password: '' });\n\n\tconst emailHandler = event => {\n\t\tformHandler('email', event.target.value);\n\t};\n\tconst passwordHandler = event => {\n\t\tformHandler('password', event.target.value);\n\t};\n\tconst formHandler = (input, value) => {\n\t\tsetFormState({ ...formState, [input]: value });\n\t};\n\n\tconst submitHandler = event => {\n\t\tevent.preventDefault();\n\t\tprops.onSubmit(formState);\n\t};\n\n\treturn (\n\t\t<div className='row'>\n\t\t\t<form className='col s8' onSubmit={submitHandler}>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<input placeholder='Email' type='email' onChange={emailHandler} />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-field'>\n\t\t\t\t\t<input placeholder='Password' type='password' onChange={passwordHandler} />\n\t\t\t\t</div>\n\t\t\t\t<button className='btn'>Submit</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default AuthForm;\n","import gql from 'graphql-tag';\n\nexport default gql`\n\tmutation($email: String, $password: String) {\n\t\tlogin(email: $email, password: $password) {\n\t\t\tid\n\t\t\temail\n\t\t}\n\t}\n`;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport AuthForm from '../../shared/components/AuthForm';\nimport mutation from '../../shared/graphql/mutations/Login';\nimport query from '../../shared/graphql/queries/CurrentUser';\nimport { useAuthHook } from '../../shared/hooks/authHook';\n\nconst LoginForm = () => {\n\tconst [ login, { error: mutationError } ] = useMutation(mutation);\n\tconst { authenticated, goFwdTo } = useAuthHook();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (authenticated) {\n\t\t\t\tgoFwdTo('Dashboard');\n\t\t\t}\n\t\t},\n\t\t[ authenticated, goFwdTo ]\n\t);\n\n\tconst submitHandler = ({ email, password }) => {\n\t\tlogin({\n\t\t\tvariables: { email, password },\n\t\t\trefetchQueries: [ { query } ]\n\t\t}).catch(error => {\n\t\t\tconsole.log(`Error logging in: ${error}`);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Login</h3>\n\t\t\t<AuthForm onSubmit={submitHandler} />\n\t\t\t{mutationError && (\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<span className='badge red center col s8' style={{ color: 'white' }}>\n\t\t\t\t\t\t{String(mutationError).replace('GraphQL error:', '')}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default LoginForm;\n","import gql from 'graphql-tag';\n\nexport default gql`\n\tmutation($email: String, $password: String) {\n\t\tsignup(email: $email, password: $password) {\n\t\t\tid\n\t\t\temail\n\t\t}\n\t}\n`;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport AuthForm from '../../shared/components/AuthForm';\nimport mutation from '../../shared/graphql/mutations/Signup';\nimport query from '../../shared/graphql/queries/CurrentUser';\nimport { useAuthHook } from '../../shared/hooks/authHook';\n\nconst SignupForm = () => {\n\tconst [ signup, { error: mutationError } ] = useMutation(mutation);\n\tconst { authenticated, goFwdTo } = useAuthHook();\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (authenticated) {\n\t\t\t\tgoFwdTo('Dashboard');\n\t\t\t}\n\t\t},\n\t\t[ authenticated, goFwdTo ]\n\t);\n\n\tconst submitHandler = ({ email, password }) => {\n\t\tsignup({\n\t\t\tvariables: { email, password },\n\t\t\trefetchQueries: [ { query } ]\n\t\t}).catch(error => {\n\t\t\tconsole.log(`Error signing up for new acct: ${error}`);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Membership Signup</h3>\n\t\t\t<AuthForm onSubmit={submitHandler} />\n\t\t\t{mutationError && (\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<span className='badge red center col s8' style={{ color: 'white' }}>\n\t\t\t\t\t\t{String(mutationError).replace('GraphQL error:', '')}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SignupForm;\n","import React from 'react';\n\nimport bgnd from '../../shared/images/dashboard.png';\n\nconst Dashboard = () => {\n\treturn (\n\t\t<section className='card row' style={{ background: 'lightyellow' }}>\n\t\t\t<div className='card-image col s12'>\n\t\t\t\t<img src={bgnd} style={{ padding: '5px' }} alt='bird' />\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider } from 'react-apollo';\n\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\nimport { onError } from 'apollo-link-error';\n\nimport LandingPage from './components/Landing/LandingPage';\nimport NavHeader from './components/Header/NavHeader';\nimport LoginForm from './components/Login/LoginFormPage';\nimport SignupForm from './components/Signup/SignupFormPage';\nimport Dashboard from './components/Dashboard/DashboardPage';\nimport requireAuth from './shared/hocs/RequireAuth';\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n\tif (graphQLErrors) {\n\t\tgraphQLErrors.map(({ message, locations, path }) =>\n\t\t\tconsole.log(\n\t\t\t\t`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n\t\t\t)\n\t\t);\n\t\tgraphQLErrors = null;\n\t}\n\tif (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nconst cache = new InMemoryCache({});\n\nconst httpLink = new HttpLink({\n\turi: 'graphql',\n\topts: { credentials: 'same-origin' }\n});\n\nconst link = ApolloLink.from([ errorLink, httpLink ]);\n\nconst client = new ApolloClient({\n\tcache,\n\tlink\n});\n\nfunction App () {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<NavHeader />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' component={LandingPage} />\n\t\t\t\t\t\t<Route path='/login' component={LoginForm} />\n\t\t\t\t\t\t<Route path='/signup' component={SignupForm} />\n\t\t\t\t\t\t<Route path='/dashboard' component={requireAuth(Dashboard)} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { graphql } from 'react-apollo';\n\nimport query from '../graphql/queries/CurrentUser';\n\nexport default WrappedComponent => {\n\tconst RequireAuth = props => {\n\t\tconst history = useHistory();\n\n\t\tuseEffect(\n\t\t\t() => {\n\t\t\t\tif (!props.data.loading && !props.data.currentUser) {\n\t\t\t\t\thistory.push('/login');\n\t\t\t\t}\n\t\t\t},\n\t\t\t[ props.data, history ]\n\t\t);\n\n\t\tif (props.data.loading) {\n\t\t\treturn <div />;\n\t\t}\n\n\t\treturn <WrappedComponent {...props} />;\n\t};\n\n\treturn graphql(query)(RequireAuth);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'materialize-css/dist/css/materialize.css';\nimport './shared/styles/styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}